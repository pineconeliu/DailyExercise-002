享元模式
享元模式主要强调的是对象的重复利用，减少相同对象的创建次数，可降低内存的压力

例子：文本编辑器，每个文字都有一个字符，每个文字都可以有自己的样式，其实样式也就那么几种，我们可以把样式给提取出来
每种样式对应一个对象，且都是可以重复利用的


享元模式的原理

所谓的享元，其实就是可以被共享的单元。享元模式的意图就是复用对象，节省内存，前提是享元对象是不可变对象。具体来讲，当一个系统中
存在大量重复对象的时候，我们就可以利用享元模式，将对象设计成享元对象，在内存中保留一份实例，供多处代码使用，这样减少内存中对象的数量
以起到节省内存的目的。其实共享的不仅仅是一整个对象，也可以是对象中的某些属性，我们可以把这些属性给拿出来，当做一个共享的部分去使用。

享元模式与单例模式的区别

单例模式是只允许当前类创建一个对象，且对象是不可变的。而享元模式可以允许创建多个对象，这些多个对象是可以共享的。这就是区别点。


享元模式中谈到的缓存与redis缓存的区别

享元模式的缓存着重点是“存储”，存储在同一个位置，这样我们就可以统一去一个地方获取对象。而redis的缓存一般是把数据库中的数据缓存一份给到redis，主要作用是为了提高查询效率，减少数据库的io交互和压力。


享元模式与缓存池和连接池的复用区别

连接池的复用主要是减少不必要的开销，每个都只有一个线程去拿资源，执行完成后，回到池中，等待重复使用。而享元模式是可以允许同一时间多个请求去获取对象操作，以达到最好的复用效果。



